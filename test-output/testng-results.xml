<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="3" total="9" passed="5" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-06-23T23:59:08 IST" name="Loan Department" finished-at="2024-06-23T23:59:08 IST" duration-ms="110">
    <groups>
      <group name="Smoke">
        <method signature="Day4.MobileLoginHomeLoan()[pri:0, instance:test.Day4@13e344d]" name="MobileLoginHomeLoan" class="test.Day4"/>
        <method signature="Day1.Demo()[pri:0, instance:test.Day1@229c6181]" name="Demo" class="test.Day1"/>
        <method signature="Day2.ploan()[pri:0, instance:test.Day2@2794eab6]" name="ploan" class="test.Day2"/>
      </group> <!-- Smoke -->
    </groups>
    <test started-at="2024-06-23T23:59:08 IST" name="Car Loan" finished-at="2024-06-23T23:59:08 IST" duration-ms="79">
      <class name="test.Day1">
        <test-method is-config="true" signature="AfSuite()[pri:0, instance:test.Day1@229c6181]" started-at="2024-06-23T23:59:08 IST" name="AfSuite" finished-at="2024-06-23T23:59:08 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfSuite -->
      </class> <!-- test.Day1 -->
      <class name="test.Day3">
        <test-method is-config="true" signature="Bfsuite()[pri:0, instance:test.Day3@28261e8e]" started-at="2024-06-23T23:59:08 IST" name="Bfsuite" finished-at="2024-06-23T23:59:08 IST" duration-ms="14" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Bfsuite -->
        <test-method is-config="true" signature="bfclass()[pri:0, instance:test.Day3@28261e8e]" started-at="2024-06-23T23:59:08 IST" name="bfclass" finished-at="2024-06-23T23:59:08 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bfclass -->
        <test-method is-config="true" signature="beforeEvery()[pri:0, instance:test.Day3@28261e8e]" started-at="2024-06-23T23:59:08 IST" name="beforeEvery" finished-at="2024-06-23T23:59:08 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEvery -->
        <test-method signature="APILoginCarLoan()[pri:0, instance:test.Day3@28261e8e]" started-at="2024-06-23T23:59:08 IST" name="APILoginCarLoan" finished-at="2024-06-23T23:59:08 IST" duration-ms="15" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- APILoginCarLoan -->
        <test-method is-config="true" signature="afterEvery()[pri:0, instance:test.Day3@28261e8e]" started-at="2024-06-23T23:59:08 IST" name="afterEvery" finished-at="2024-06-23T23:59:08 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEvery -->
        <test-method is-config="true" signature="afclass()[pri:0, instance:test.Day3@28261e8e]" started-at="2024-06-23T23:59:08 IST" name="afclass" finished-at="2024-06-23T23:59:08 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afclass -->
      </class> <!-- test.Day3 -->
    </test> <!-- Car Loan -->
    <test started-at="2024-06-23T23:59:08 IST" name="Personal Loan" finished-at="2024-06-23T23:59:08 IST" duration-ms="110">
      <class name="test.Day1">
        <test-method signature="Demo()[pri:0, instance:test.Day1@229c6181]" started-at="2024-06-23T23:59:08 IST" name="Demo" finished-at="2024-06-23T23:59:08 IST" duration-ms="17" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at test.Day1.Demo(Day1.java:20)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1570)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Demo -->
        <test-method is-config="true" signature="lastexecution()[pri:0, instance:test.Day1@229c6181]" started-at="2024-06-23T23:59:08 IST" name="lastexecution" finished-at="2024-06-23T23:59:08 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lastexecution -->
      </class> <!-- test.Day1 -->
      <class name="test.Day2">
        <test-method is-config="true" signature="prerequisite()[pri:0, instance:test.Day2@2794eab6]" started-at="2024-06-23T23:59:08 IST" name="prerequisite" finished-at="2024-06-23T23:59:08 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- prerequisite -->
        <test-method signature="ploan()[pri:0, instance:test.Day2@2794eab6]" started-at="2024-06-23T23:59:08 IST" name="ploan" finished-at="2024-06-23T23:59:08 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ploan -->
      </class> <!-- test.Day2 -->
      <class name="test.Day4">
        <test-method signature="MobileLoginHomeLoan()[pri:0, instance:test.Day4@13e344d]" started-at="2024-06-23T23:59:08 IST" name="MobileLoginHomeLoan" finished-at="2024-06-23T23:59:08 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileLoginHomeLoan -->
        <test-method signature="webLoginHomeLoan(java.lang.String,java.lang.String)[pri:0, instance:test.Day4@13e344d]" started-at="2024-06-23T23:59:08 IST" name="webLoginHomeLoan" finished-at="2024-06-23T23:59:08 IST" duration-ms="9" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[qaclickacademy.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[123456]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- webLoginHomeLoan -->
        <test-method signature="APILoginHomeLoan()[pri:0, instance:test.Day4@13e344d]" started-at="2024-06-23T23:59:08 IST" name="APILoginHomeLoan" finished-at="2024-06-23T23:59:08 IST" depends-on-methods="test.Day4.webLoginHomeLoan" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- APILoginHomeLoan -->
      </class> <!-- test.Day4 -->
    </test> <!-- Personal Loan -->
  </suite> <!-- Loan Department -->
</testng-results>
